akka {
  actor {
    provider = "akka.actor.LocalActorRefProvider"

    # Default configuration for logging
    debug {
      receive = on
      autoreceive = on
      lifecycle = on
      router = on
      remoting = on
      paths {
        # Set to on if you want to log all paths
        / = on
      }
    }
  }

  loglevel = "INFO"  # Set to "DEBUG" for more verbose output

  stream {
    materializer {
      dispatcher = "akka.stream.default-dispatcher"
      initial-input-buffer-size = 16  # Set the initial buffer size
      max-input-buffer-size = 64        # Set the maximum buffer size

      subscription-timeout {
        mode = "cancel"                # Can be "cancel" or "complete"
        timeout = 5 seconds            # Set timeout duration
      }
    }
  }

  default-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"

    fork-join-executor {
      parallelism-min = 8
      parallelism-factor = 2.0
      parallelism-max = 64
    }

    throughput = 100
  }

  stream.default-dispatcher {
    type = "Dispatcher"
    executor = "fork-join-executor"

    fork-join-executor {
      parallelism-min = 8
      parallelism-factor = 2.0
      parallelism-max = 64
    }

    throughput = 100
  }

  http {
    server {
      # Server settings
      hostname = "127.0.0.1"      # or your desired host
      port = 8080                  # or your desired port
    }

    parsing {
      max-chunk-size = 8192  # Maximum size of a chunked message
      max-content-length = 256kB  # Max content length for requests
      max-header-size = 8192  # Max header size for requests
      max-initial-line-size = 4096  # Max initial line size for requests
    }

    # Optional: Configure the connection level
    client {
      # Settings for the HTTP client if you're using one
      idle-timeout = 60 seconds
    }

    # Additional optional settings
    default-http-port = 80
    default-https-port = 443
    version = "10.5.3"       # Specify the version of Akka HTTP you are using

    host-connection-pool {
      # The maximum number of connections to open for a host
      max-connections = 32
      min-connections = 2
      max-retries = 2
      max-open-requests = 2
      pipelining-limit = 2
      max-connection-lifetime = 20 seconds
      base-connection-backoff = 2 second    # Set a base backoff duration
      keep-alive-timeout = 2 second    # Set a base backoff duration
      max-connection-backoff = 10 second    # Set a base backoff duration
      client {
          parsing {
          max-to-strict-bytes = 65536  # Added max-method-length here
          max-comment-parsing-depth = 64  # Added max-method-length here
          max-chunk-ext-length = 64  # Added max-method-length here
          max-header-count = 64  # Added max-method-length here
          max-header-value-length = 64  # Added max-method-length here
          max-header-name-length = 64  # Added max-method-length here
          max-response-reason-length = 64  # Added max-method-length here
          max-method-length = 64  # Added max-method-length here
          max-uri-length = 8192
          header-cache {
             enabled = true
             max-size = 1000
             expiration-time = 5m
           }
            max-chunk-size = 8192  # Maximum size of a chunked message
            max-content-length = 256kB  # Max content length for requests
            max-header-size = 8192  # Max header size for requests
            max-initial-line-size = 4096  # Max initial line size for requests
          }
          socket-options = {
            "so-receive-buffer-size" : 65536
            "so-send-buffer-size" : 65536
             so-reuse-address = on  # Enable reuse address option for sockets
             so-traffic-class = 0
             tcp-keep-alive = on
              tcp-oob-inline = on
               tcp-no-delay = on
           }
          websocket {
            log-frames = off
            periodic-keep-alive-max-idle = 1.minute
            periodic-keep-alive-mode = "ping"  # Options: "ping", "pong", or "data"
            periodic-keep-alive-data = ""  # Only applicable if mode is "data"
            max-frame-size = 65536  # Maximum frame size in bytes
            max-connections = 100    # Maximum number of WebSocket connections
            idle-timeout = 60.seconds # Timeout for idle WebSocket connections
          }
        log-unencrypted-network-bytes = off  # Set to "on" if you want to enable logging
        # Define any client-specific settings here
        request-timeout = 30.seconds  # Default request timeout
        idle-timeout = 60.seconds      # Idle timeout for connections
        user-agent-header = "MyApp/1.0"
        connecting-timeout = 5 seconds
        request-header-size-hint = 8192  # This is the default value; adjust if necessary
      }
      # The maximum number of connections per host
      per-host-override = [
        {
          host-pattern = "*"
          max-connections = 16
        }
      ]

      # Timeout settings
      idle-timeout = 30s
      connection-settings {
        connection-ttl = 30s
      }
    }
  }

    debug-logging = {
      receive = off
      autoreceive = off
      lifecycle = off
      router = off
      remoting = off
    }
}